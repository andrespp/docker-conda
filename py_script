#!/usr/bin/env python3
import traceback
import os.path
import configparser
from HubspotObjects import SQLAlchemy
from HubspotObjects.contacts import Contacts
from HubspotObjects.deals import Deals

# Default settings
CONFIG_FILE = 'config.ini'

if __name__ == '__main__':

    # Read configuration File
    if not os.path.isfile(CONFIG_FILE):
        print('ERROR: file "{}" does not exist'.format(CONFIG_FILE))
        exit(-1)
    try:
        config = configparser.ConfigParser()
        config.read(CONFIG_FILE)

    except:
        print('ERROR: Unable to read config file ("{}")'.format(CONFIG_FILE))
        exit(-1)

    # DB Connection
    user = config['DB']['USER']
    pswd = config['DB']['PASS']
    host = config['DB']['HOST']
    port = config['DB']['PORT']
    base = config['DB']['BASE']
    url = f"postgresql://{user}:{pswd}@{host}:{port}/{base}"
    db = SQLAlchemy.Database(connection_string=url, echo=True)

    #### App itself

    # Sample data
    contacts = [
        Contacts(username='John'),
        Contacts(username='Jack'),
        Contacts(username='James'),
    ]
    deals = [
        Deals(dealname='Deal #1'),
        Deals(dealname='Deal #2'),
        Deals(dealname='Deal #3'),
        Deals(dealname='Deal #4'),
    ]

    # Write contacts to db
    for contact in contacts:
        session = db.session()
        try:
            session.add(contact)
            session.commit()
        except Exception as e:
            print(f'err: {e}')

    # Write deals to db
    for deal in deals:
        session = db.session()
        try:
            session.add(deal)
            session.commit()
        except Exception as e:
            print(f'err: {e}')


